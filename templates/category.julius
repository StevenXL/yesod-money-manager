function handleMessage(data) {
  switch(data.event) {
    case 'newCategoryCount':
      var newCategoryCount = data.payload.count;
      var id = data.payload.category.name.toLowerCase();
      var span = $('#' + id).first().children('span').first();
      span.text(newCategoryCount);
      break;
    default:
      console.warn('Unknown event:' + data.event)
  }
}

function attachObserverToBadges() {
  var badges = document.querySelectorAll('.badge')

  badges.forEach(function(badge) {
    var animateBadge = function() {
      var jBadge = $(badge);

      function moveItBack() {
        jBadge.animate({"font-size": "13px"})
      }

      jBadge.animate({"font-size": "18px"}, {complete: moveItBack})
    }

    var observer = new MutationObserver(animateBadge)

    observer.observe(badge, {childList: true})
  })
}

$(function() {
  attachObserverToBadges()

  var location = document.location
  var url = 'ws://' + location.host + '/categories'

  var socket = new WebSocket(url)

  // Did not connect successfully
  socket.addEventListener('error', function(event) {
    console.log('Did not connect successfully to web socket.')
  })

  // Connection closed
  socket.addEventListener('close', function(event) {
    console.log('we closed')
  })

  // Message Received
  socket.addEventListener('message', function(event) {
    var data = JSON.parse(event.data);
    return handleMessage(data);
  })
})
